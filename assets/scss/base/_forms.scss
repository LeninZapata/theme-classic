/*
|.------------------------------------------------------------------
| = 4. Forms
|--------------------------------------------------------------------------
*/
/* ─── Reset ──────── */
// Here you use empty hook type variables that can be edited in the custom
form {
  // background-color: var(--color-bg, hsl(0, 0%, 95%));
  border-radius: var(--form-control-radius, 0.25rem);
  &::-moz-placeholder {
    opacity: 1;
  }
}
textarea{
  width: 100%;
  min-height: 150px;
}
textarea,
input[type="text"],
input[type="password"],
input[type="number"],
input[type="search"],
select{
  border: 1px solid var(--wp-form-border-input);
}
label {
  display: inline-block;
}

/* ─── Forms ──────── */
// error message
.form__msg-error, .form-error-msg { // .form__msg-error is fallback for older framework versions
  // hide element
  position: absolute;
  clip: rect(1px, 1px, 1px, 1px);
}
.form__msg-error--is-visible, .form-error-msg--is-visible {
  position: relative;
  clip-path: auto;
}
// set basic style for (native) radio and checkbox buttons
.radio-list, .checkbox-list { // e.g., .radio-list > li > input + label
  > * { // parent of input + label
    position: relative;
  }
}

/* ─── Button ──────── */
.button, input[type="submit"]{
  cursor: pointer;
  border-radius: 3px;
  display: block;
  width: 100%;
  -webkit-transition: all 0.1s linear;
  -moz-transition: all 0.1s linear;
  transition: all 0.1s linear;
  border: 1px solid var(--wp-body-text-color-alt2);
  -webkit-appearance: none;
  @include breakpoint(tablet){
    display: inline;
    width: auto;
  }
}